---
- summary: |
    Проверка регистрации пользователя
  requirement: |
     При верном вводе логине и пароля пользователь должен быть зарегистрирован в системе 
  prerequisites: |
     Открыта страница регистрации на сайте 
  test-data: |
    Тестовые данные
    Логин = julia Пароль = 12345@
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Зарегистрироваться»
  expected-result: |
    Регистрация успешна, данные пользователя отправились на сервер 

- summary: |
    Проверка входа пользователя с существующими логином и паролем
  requirement: |
     При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
     Открыта страница логина на сайте https://codebattle.hexlet.io/
  test-data: |
    Тестовые данные
    Логин = julia Пароль = 12345@
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Войти»
  expected-result: |
    Пользователь должен попасть на главную страницу с успешной авторизацией 

- summary: |
    Проверка входа пользователя с использованием аккаунта на Github
  requirement: |
    Пользователь должен иметь возможнойсть войти в стисему с существующим аккаунтом на платформе Github
  prerequisites:
    Открыта страница логина, имеется зарегистрированный аккаунт на платформе Github
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку «Войти с Github»
  expected-result: |
    Пользователь должен попасть на главную страницу с успешной авторизацией

- summary: |
    Проверка возможности создания игры с ботом
  requirement: |
    Пользователь должен иметь возможность создать игру с ботом
  prerequisites:
    Пользователь зарегистрирован, открыта главная страница проекта 
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку "Создать игру"
    - Выбираем любой уровень сложности игры, например "1 уровень"
    - Выбираем тип игры "С ботом"
    - Выбираем любое время игры на таймере, например "8 минут"
    - Выбираем любую задачу для игры, например "random task"
    - Нажимаем "Создать батл"
  expected-result: |
    Игра успешно создана, в соперниках - бот

- summary: |
    Проверка возможности создания игры с реальным человеком
  requirement: |
    Пользователь должен иметь возможность создать игру с реальным человеком
  prerequisites:
    Пользователь зарегистрирован, открыта главная страница проекта 
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку "Создать игру"
    - Выбираем любой уровень сложности игры, например "1 уровень"
    - Выбираем тип игры "С другим пользователем"
    - Выбираем любое время игры на таймере, например "8 минут"
    - Выбираем любую задачу для игры, например "random task"
    - Нажимаем "Создать батл"
  expected-result: |
    Игра успешно создана, в соперниках - реальный пользователь

- summary: |
    Проверка присутствия таймера, описания задания и чата в режиме игры
  requirement: |
    В созданной игре должны отображаться: таймер, чат и задание
  prerequisites:
    Пользователь зарегистрирован, создана игра с любыми настройками
  test-data: |
    no-data
  steps:
    - Проверяем наличие таймера вверху редактора игры
    - Проверяем наличие описания задания в поле выше редактора 
    - Проверяем наличие чата в интерфейсе игры
  expected-result: |
    Все элементы: чат, таймер, описание задания присутствуют в интерфейсе созданной игры 

- summary: |
    Проверка работы редактора кода в созданной игре 
  requirement: |
    В созданной игре должна быть возможность написать, редактировать и удалять код 
  prerequisites:
    Пользователь зарегистрирован, создана игра с любыми настройками
  test-data: |
    no-data
  steps:
    - В строке редактора указываем любой код, например: "const _ = require("lodash");"
    - Редактируем строчку кода, например удаляя "require"
    - Стираем всю строку кода
  expected-result: |
    В редакторе есть возможность удалить, написать и отредактировать код

- summary: |
    Проверка вывода тестов при проверке кода
  requirement: |
    В игре должен присутствовать вывод тестов
  prerequisites:
    Пользователь зарегистрирован, создана игра с любыми настройками
  test-data: |
    no-data
  steps:
    - В строке редактора указываем любой корректный код, который должен работать
    - Нажимаем кнопку "Run" в редакторе
    - Редактируем строку кода так, чтобы код перестал работать
    - Нажимаем кнопку "Run" в редакторе
  expected-result: |
    Выводы тестов показывают правильные проверки: при исправном коде - pass, при неисправном коде - failed
