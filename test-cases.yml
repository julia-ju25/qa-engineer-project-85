---
- summary: |
    Проверка регистрации пользователя
  requirement: |
     При верном вводе логине и пароля пользователь должен быть зарегистрирован в системе 
  prerequisites: |
     Открыта страница регистрации на сайте 
  test-data: |
    no-data
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Зарегистрироваться»
  expected-result: |
    Пользователь успешно зарегистрирован

- summary: |
    Проверка авторизации
  requirement: |
     При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
     Открыта страница логина на сайте https://codebattle.hexlet.io/
  test-data: |
    Тестовые данные
    Логин = julia Пароль = 12345@
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Войти»
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка авторизации с использованием аккаунта на Github
  requirement: |
    Пользователь должен иметь возможнойсть войти в стисему с существующим аккаунтом на платформе Github
  prerequisites:
    Открыта страница логина, имеется зарегистрированный аккаунт на платформе Github
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку «Войти с Github»
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка создания игры с ботом
  requirement: |
    Пользователь должен иметь возможность создать игру с ботом
  prerequisites:
    Пользователь зарегистрирован, открыта главная страница проекта 
  test-data: |
    no-data
  steps:
    - Нажимаем кнопку "Создать игру"
    - Выбираем любой уровень сложности игры, например "1 уровень"
    - Выбираем тип игры "С ботом"
    - Выбираем любое время игры на таймере, например "8 минут"
    - Выбираем любую задачу для игры, например "random task"
    - Нажимаем "Создать батл"
  expected-result: |
    Игра успешно создана, в соперниках - бот

- summary: |
    Проверка создания игры с пользователем
  requirement: |
    Пользователь должен иметь возможность создать игру с другим реальным пользователем
  prerequisites:
    Пользователь зарегистрирован, открыта главная страница проекта 
  test-data: |
    Тестовые данные для пользователя номер 2:
    Логин = Jake1 Пароль = 123qwerty
  steps:
    - Нажать кнопку "Создать игру"
    - Выбрать любой уровень сложности игры, например "1 уровень"
    - Выбрать тип игры "С другим пользователем"
    - Выбрать любое время игры на таймере, например "8 минут"
    - Выбрать любую задачу для игры, например "random task"
    - Нажать "Создать батл"
    - Войти в созданную игру Пользователем 2
  expected-result: |
    Игра успешно создана, в соперниках - реальный пользователь

- summary: |
    Проверка редактирования кода в активной игре 
  requirement: |
    В созданной игре должна быть возможность написать, редактировать и удалять код 
  prerequisites:
    Пользователь зарегистрирован, создана игра с любыми настройками
  test-data: |
    no-data
  steps:
    - В строке редактора указываем любой код, например: "const _ = require("lodash");"
    - Редактируем строчку кода, например удаляя "require"
    - Стираем всю строку кода
  expected-result: |
    Код успешно отредактирован

- summary: |
    Проверка победы в игре
  requirement: |
    Вывод тестов должен определять победу игрока при вводе верного кода 
  prerequisites:
    Пользователь зарегистрирован
  test-data: |
    no-data
  steps:
    - Нажать на кнопку создания игры
    - В модальном окне создания игры выбрать следующие настройки: 1 уровень, игра с ботом, любое время, задание "react_area", тэги "math" и "rest"
    - Нажать на кнопку создания игры
    - В созданной игре выбрать язык  NodeJS  для решения задачи
    - Написать в окне для кода следующий код - "
     const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
    return width * length;
    };

    module.exports = solution;"
    - Нажать кнопку "Run" в редакторе 
  expected-result: |
    Победа в созданной игре

- summary: |
    Проверка отображения ошибки при неверном коде
  requirement: |
    Вывод тестов должен определять неверный код и отображать ошибку "failed"
  prerequisites:
    Пользователь зарегистрирован, создана игра с любыми настройками
  test-data: |
    no-data
  steps:
    - В строке редактора написать любой неработающий код, например - "2jj3j44ll"
    - Нажать кнопку "Run" в редакторе 
  expected-result: |
    Отображается ошибка "failed"
